---
# generated using template templates/resources/integration.md.tmpl
page_title: "{{.Name}} {{.Type}} - {{.ProviderName}}"
subcategory: ""
description: |-
{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---

# {{.Name}} ({{.Type}})

{{ .Description | trimspace }}

{{ if .HasExample -}}
## Example Usage
{{tffile "examples/resources/juju_integration/resource.tf"}}
{{- end }}

{{ .SchemaMarkdown | trimspace }}


### Notes
When creating this resource the `offer_url` property will show `(known after apply)` if a `name` or
 `name` and `endpoint` are supplied as below:
```
  + resource "juju_integration" "this" {
      + id    = (known after apply)
      + model = "this"
      + via   = "10.0.0.0/24,10.0.1.0/24"

      + application {
          + endpoint  = (known after apply)
          + name      = "one"
          + offer_url = (known after apply)
        }
    }
```
This is due to an integration requiring a name/endpoint combination or an offer_url, but not both
bits of data together.

#### Cross-model relations

Version 0.23.0 of the provider introduced a change when integrating with an offer (i.e. when specifying the `offer_url`). 
The provider will create a remote application name with the format `<remote-app>-<local-app>-<interface>`. For example,
when relating a local application called `discourse` with an offer url of the form `admin/dbModel.postgresql`, using the `database` interface, the remote application will have the name `postgresql-discourse-database`.

In previous versions of the provider, the remote application would always have the same name as the application in the offer url, i.e. `postgresql` in the example above.

While change is backwards compatible, it uncovered a Juju bug that will cause an issue when relating to the same offer
multiple times, see https://github.com/juju/juju/issues/20818 for more details.
For this reason, the change is being reverted in v0.23.1 of the provider. 

While deployments made using v0.23.0 will continue to work, you may have noticed `saas` applications with the name `<remote-app>-<local-app>-<interface>`. After upgrading to v0.23.1, these apps will continue
to exist and work as expected but newly consumed offers will follow the previous naming convention.

See the diagrams below for a comparison of the changes.

Before v0.23.0:
```{mermaid}
flowchart LR
    A[App A] -->|Integrate| C(Remote APP)
    B[App B] -->|Integrate| C
    C -->|Cross Model| D[Offer]
    D--> E[App C]
```

v0.23.0:
```{mermaid}
flowchart LR
    A[App A] -->|Integrate| C(Remote App 1)
    B[App B] -->|Integrate| D(Remote App 2)
    C -->|Cross Model| E[Offer]
    D -->|Cross Model| E[Offer]
    E--> F[App C]
```

v0.23.1:
Same as before v0.23.0.


{{ if .HasImport -}}
## Import

Import is supported using the following syntax:

{{codefile "shell" "examples/resources/juju_integration/import.sh"}}
{{- end }}
